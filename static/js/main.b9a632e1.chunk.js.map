{"version":3,"sources":["assets/me.md","assets/experience.md","assets/education.md","assets/projects.md","assets/contacts.md","components/Header.tsx","components/Banner.tsx","components/MarkdownRender.tsx","components/Section.tsx","components/Footer.tsx","components/App.tsx","theme.tsx","serviceWorker.ts","index.tsx"],"names":["module","exports","useStyles","makeStyles","theme","toolbar","borderBottom","palette","divider","justifyContent","padding","spacing","toolbarSecondary","overflowX","toolbarLink","flexShrink","Header","props","classes","sections","title","Toolbar","className","Button","variant","size","endIcon","component","href","process","target","rel","Hidden","xsDown","Link","color","noWrap","startIcon","download","map","section","url","key","banner","position","marginBottom","backgroundImage","backgroundRepeat","backgroundSize","backgroundPosition","backgroundColor","common","white","black","textShadow","overlay","top","bottom","right","left","bannerContent","breakpoints","up","paddingRight","Banner","contents","Paper","style","image","display","src","alt","imageText","Grid","container","item","md","Typography","gutterBottom","paragraph","description","linkTarget","linkText","decorableLinks","name","icon","EmailIcon","prefix","GitHubIcon","LinkedInIcon","FacebookIcon","PublicIcon","options","overrides","h1","h2","h3","h4","p","a","decorableLink","find","test","RegExp","children","alignItems","li","withStyles","listItem","marginTop","MarkdownRender","markdown","typography","body2","Section","useState","fetchedContents","setFetchedContents","useEffect","length","Promise","all","c","fetch","then","response","text","responses","xs","substring","Divider","Description","align","Copyright","Date","getFullYear","footer","background","paper","Footer","Container","maxWidth","mainGrid","me","projects","experience","contacts","bannerContents","window","location","includes","App","CssBaseline","s","path","exact","from","to","createMuiTheme","primary","main","secondary","error","red","A400","default","Boolean","hostname","match","ReactDOM","render","StrictMode","ThemeProvider","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","console","message"],"mappings":"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","file":"static/js/main.b9a632e1.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/me.0566d816.md\";","module.exports = __webpack_public_path__ + \"static/media/experience.106db9bd.md\";","module.exports = __webpack_public_path__ + \"static/media/education.38c904df.md\";","module.exports = __webpack_public_path__ + \"static/media/projects.84b2b80b.md\";","module.exports = __webpack_public_path__ + \"static/media/contacts.785c92d7.md\";","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Button from '@material-ui/core/Button';\nimport Hidden from '@material-ui/core/Hidden';\nimport Link from '@material-ui/core/Link';\nimport CreateIcon from '@material-ui/icons/Create';\nimport GetAppIcon from '@material-ui/icons/GetApp';\n\ninterface Section {\n  title: string;\n  url: string;\n}\n\nexport interface HeaderProps {\n  sections: Array<Section>;\n  title?: string;\n}\n\nconst useStyles = makeStyles((theme) => ({\n  toolbar: {\n    borderBottom: `1px solid ${theme.palette.divider}`,\n    justifyContent: 'space-between',\n    padding: theme.spacing(1, 0),\n  },\n  toolbarSecondary: {\n    justifyContent: 'space-between',\n    overflowX: 'auto',\n  },\n  toolbarLink: {\n    padding: theme.spacing(1),\n    flexShrink: 0,\n  },\n}));\n\nconst Header: React.FC<HeaderProps> = (props) => {\n  const classes = useStyles();\n  const { sections, title } = props;\n\n  return (\n    <>\n      <Toolbar className={classes.toolbar}>\n        <Button\n          variant=\"outlined\"\n          size=\"small\"\n          endIcon={<CreateIcon />}\n          component=\"a\"\n          href={`mailto:${process.env.REACT_APP_EMAIL}`}\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          Write me\n        </Button>\n        <Hidden xsDown>\n          <Link href={`${process.env.PUBLIC_URL}/`} variant=\"h5\" color=\"inherit\" noWrap>\n            {title}\n          </Link>\n        </Hidden>\n        <Button\n          variant=\"outlined\"\n          size=\"small\"\n          startIcon={<GetAppIcon />}\n          component=\"a\"\n          href={`${process.env.PUBLIC_URL}/${process.env.REACT_APP_NAME} CV.pdf`}\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n          download={`${process.env.REACT_APP_NAME} CV.pdf`}\n        >\n          Download my CV\n        </Button>\n      </Toolbar>\n      <Toolbar component=\"nav\" variant=\"dense\" className={classes.toolbarSecondary}>\n        {sections.map((section: Section) => (\n          <Hidden xsDown={section.url === '/experience'} key={section.title}>\n            <Link\n              color=\"inherit\"\n              noWrap\n              variant=\"body2\"\n              href={section.url}\n              className={classes.toolbarLink}\n            >\n              {section.title}\n            </Link>\n          </Hidden>\n        ))}\n      </Toolbar>\n    </>\n  );\n};\n\nexport default Header;\n","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Paper from '@material-ui/core/Paper';\nimport Typography from '@material-ui/core/Typography';\nimport Grid from '@material-ui/core/Grid';\nimport Link from '@material-ui/core/Link';\n\nexport interface BannerProps {\n  contents: {\n    title?: string;\n    date?: string;\n    description?: string;\n    image?: string;\n    imageText?: string;\n    linkTarget?: string;\n    linkText?: string;\n  };\n}\n\nconst useStyles = makeStyles((theme) => ({\n  banner: {\n    position: 'relative',\n    marginBottom: theme.spacing(4),\n    backgroundImage: 'url(https://source.unsplash.com/random)',\n    backgroundRepeat: 'no-repeat',\n    backgroundSize: 'auto',\n    backgroundPosition: 'center right -10%',\n    backgroundColor: theme.palette.common.white,\n    color: theme.palette.common.black,\n    textShadow: '#bbb 0px 0px 3px, #bbb 0px 0px 3px, #bbb 0px 0px 3px, #bbb 0px 0px 3px',\n    '-webkit-font-smoothing': 'antialiased',\n  },\n  overlay: {\n    position: 'absolute',\n    top: 0,\n    bottom: 0,\n    right: 0,\n    left: 0,\n    backgroundColor: 'rgba(0,0,0,.3)',\n  },\n  bannerContent: {\n    position: 'relative',\n    padding: theme.spacing(3),\n    [theme.breakpoints.up('md')]: {\n      padding: theme.spacing(6),\n      paddingRight: 0,\n    },\n  },\n}));\n\nconst Banner: React.FC<BannerProps> = (props) => {\n  const classes = useStyles();\n  const { contents } = props;\n  return (\n    <Paper className={classes.banner} style={{ backgroundImage: `url(${contents.image})` }}>\n      {/* Increase the priority of the hero background image */}\n      <img style={{ display: 'none' }} src={contents.image} alt={contents.imageText} />\n      <div className={classes.overlay} />\n      <Grid container>\n        <Grid item md={6}>\n          <div className={classes.bannerContent}>\n            <Typography component=\"h1\" variant=\"h3\" color=\"inherit\" gutterBottom>\n              {contents.title}\n            </Typography>\n            <Typography variant=\"h5\" color=\"inherit\" paragraph>\n              {contents.description}\n            </Typography>\n            <Link variant=\"subtitle1\" color=\"textSecondary\" href={contents.linkTarget}>\n              {contents.linkText}\n            </Link>\n          </div>\n        </Grid>\n      </Grid>\n    </Paper>\n  );\n};\n\nexport default Banner;\n","import React from 'react';\nimport Markdown, { MarkdownProps } from 'markdown-to-jsx';\nimport { withStyles, Theme, StyleRules, WithStyles } from '@material-ui/core/styles';\nimport Typography from '@material-ui/core/Typography';\nimport Link, { LinkProps } from '@material-ui/core/Link';\nimport Grid from '@material-ui/core/Grid';\nimport EmailIcon from '@material-ui/icons/Email';\nimport GitHubIcon from '@material-ui/icons/GitHub';\nimport FacebookIcon from '@material-ui/icons/Facebook';\nimport PublicIcon from '@material-ui/icons/Public';\nimport LinkedInIcon from '@material-ui/icons/LinkedIn';\n\nconst styles = (theme: Theme): StyleRules => ({\n  listItem: {\n    marginTop: theme.spacing(1),\n  },\n});\n\nconst decorableLinks = [\n  { name: 'email', icon: EmailIcon, prefix: /^mailto:/i },\n  { name: 'github', icon: GitHubIcon, prefix: /^(https?:\\/\\/)?(www.)?github.com\\//i },\n  { name: 'linkedin', icon: LinkedInIcon, prefix: /^(https?:\\/\\/)?(www.)?linkedin.com\\/in\\//i },\n  { name: 'facebook', icon: FacebookIcon, prefix: /^(https?:\\/\\/)?(www.)?facebook.com\\//i },\n  { name: 'website', icon: PublicIcon, prefix: /^(https:\\/\\/)(www.)?/i },\n];\n\nconst options = {\n  overrides: {\n    h1: {\n      component: Typography,\n      props: { gutterBottom: true, variant: 'h5' },\n    },\n    h2: {\n      component: Typography,\n      props: { gutterBottom: true, variant: 'h6' },\n    },\n    h3: {\n      component: Typography,\n      props: { gutterBottom: true, variant: 'subtitle1' },\n    },\n    h4: {\n      component: Typography,\n      props: { gutterBottom: true, variant: 'caption', paragraph: true },\n    },\n    p: {\n      component: Typography,\n      props: { paragraph: true },\n    },\n    a: {\n      component: (props: LinkProps & { href: string; children: Array<string> }): JSX.Element => {\n        const decorableLink = decorableLinks.find(({ name }) => name === props.title);\n        if (\n          decorableLink &&\n          decorableLink.prefix.test(props.href) &&\n          new RegExp(`${props.children[0]}$`, 'i').test(props.href)\n        ) {\n          return (\n            <Grid container spacing={1} key={props.title} alignItems=\"stretch\">\n              <Grid item>\n                <decorableLink.icon />\n              </Grid>\n              <Grid item>\n                <Link\n                  display=\"block\"\n                  variant=\"body1\"\n                  href={props.href}\n                  target=\"_blank\"\n                  rel=\"noopener noreferrer\"\n                >\n                  {props.children[0]}\n                </Link>\n              </Grid>\n            </Grid>\n          );\n        }\n        return <Link target=\"_blank\" rel=\"noopener noreferrer\" {...props} />;\n      },\n    },\n    li: {\n      component: withStyles(styles)(({ classes, ...props }: WithStyles) => (\n        <li className={classes.listItem}>\n          <Typography component=\"span\" {...props} />\n        </li>\n      )),\n    },\n  },\n};\n\nconst MarkdownRender: React.FC<MarkdownProps> = (props) => {\n  return <Markdown options={options} {...props} />;\n};\n\nexport default MarkdownRender;\n","import React, { useState, useEffect } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport Divider from '@material-ui/core/Divider';\n\nimport MarkdownRender from './MarkdownRender';\n\nexport interface SectionProps {\n  contents: Array<string>;\n}\n\nconst useStyles = makeStyles((theme) => ({\n  markdown: {\n    ...theme.typography.body2,\n    padding: theme.spacing(3, 0),\n  },\n}));\n\nconst Section: React.FC<SectionProps> = (props) => {\n  const classes = useStyles();\n  const { contents } = props;\n\n  const [fetchedContents, setFetchedContents] = useState([] as Array<string>);\n  useEffect(() => {\n    if (fetchedContents.length === 0) {\n      Promise.all(\n        contents.map((c) => fetch(c).then((response) => response.text())),\n      ).then((responses) => setFetchedContents([...responses]));\n    }\n  });\n\n  return (\n    <Grid item xs={12} md={12}>\n      {fetchedContents.map((md: string) => (\n        <div key={md.substring(0, 40)}>\n          <Divider />\n          <MarkdownRender className={classes.markdown}>{md}</MarkdownRender>\n        </div>\n      ))}\n    </Grid>\n  );\n};\n\nexport default Section;\n","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Container from '@material-ui/core/Container';\nimport Typography from '@material-ui/core/Typography';\nimport Link from '@material-ui/core/Link';\n\nexport interface FooterProps {\n  title: string;\n}\n\nconst Description: React.FC = () => (\n  <Typography variant=\"subtitle1\" align=\"center\" color=\"textSecondary\" component=\"p\">\n    {'Built with '}\n    <Link color=\"textPrimary\" href=\"https://github.com/scifier/cv-materializer\">\n      cv-materializer\n    </Link>\n  </Typography>\n);\n\nconst Copyright: React.FC = () => (\n  <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\n    {`Copyright © ${new Date().getFullYear()} `}\n    <Link color=\"textPrimary\" href=\"https://scifier.dev\">\n      scifier.dev\n    </Link>\n  </Typography>\n);\n\nconst useStyles = makeStyles((theme) => ({\n  footer: {\n    backgroundColor: theme.palette.background.paper,\n    // marginTop: theme.spacing(8),\n    padding: theme.spacing(6, 0),\n  },\n}));\n\nconst Footer: React.FC<FooterProps> = (props) => {\n  const classes = useStyles();\n  const { title } = props;\n\n  return (\n    <footer className={classes.footer}>\n      <Container maxWidth=\"lg\">\n        <Typography variant=\"h6\" align=\"center\" gutterBottom>\n          {title}\n        </Typography>\n        <Description />\n        <Copyright />\n      </Container>\n    </footer>\n  );\n};\n\nexport default Footer;\n","import React from 'react';\nimport { BrowserRouter as Router, Route, Redirect, Switch } from 'react-router-dom';\nimport { makeStyles } from '@material-ui/core/styles';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Grid from '@material-ui/core/Grid';\nimport Container from '@material-ui/core/Container';\n\nimport { me, experience, projects, contacts } from '../assets';\nimport Header from './Header';\nimport Banner from './Banner';\nimport Section from './Section';\nimport Footer from './Footer';\n\nconst useStyles = makeStyles((theme) => ({\n  mainGrid: {\n    marginTop: theme.spacing(3),\n  },\n}));\n\nconst sections = [\n  { title: 'About me', url: '/me', contents: [me] },\n  { title: 'My projects', url: '/projects', contents: [projects] },\n  { title: 'My experience', url: '/experience', contents: [experience] },\n  { title: 'My contacts', url: '/contacts', contents: [contacts] },\n];\n\nconst bannerContents = {\n  title: process.env.REACT_APP_WELCOME_MESSAGE,\n  description: process.env.REACT_APP_DESCRIPTION,\n  image: `${process.env.PUBLIC_URL}/logo.png`,\n  imageText: process.env.REACT_APP_NAME,\n  linkTarget: window.location.href.includes(sections[1].url) ? sections[0].url : sections[1].url,\n  linkText: window.location.href.includes(sections[1].url) ? sections[0].title : sections[1].title,\n};\n\nconst App: React.FC = () => {\n  const classes = useStyles();\n  return (\n    <>\n      <CssBaseline />\n      <Container maxWidth=\"lg\">\n        <Header title={process.env.REACT_APP_DOMAIN} sections={sections} />\n        <Router>\n          <main>\n            <Banner contents={bannerContents} />\n            <Grid container spacing={5} className={classes.mainGrid}>\n              <Switch>\n                {sections.map((s) => (\n                  <Route\n                    key={`route-${s.title}`}\n                    path={s.url}\n                    exact\n                    component={(): JSX.Element => <Section contents={s.contents} />}\n                  />\n                ))}\n                <Redirect from=\"/\" to={sections[0].url} />\n              </Switch>\n            </Grid>\n          </main>\n        </Router>\n      </Container>\n      <Footer title={`${process.env.REACT_APP_NAME} Portfolio`} />\n    </>\n  );\n};\n\nexport default App;\n","import red from '@material-ui/core/colors/red';\nimport { createMuiTheme } from '@material-ui/core/styles';\n\n// Custom Material UI Theme\nexport default createMuiTheme({\n  palette: {\n    primary: {\n      main: '#556cd6',\n    },\n    secondary: {\n      main: '#19857b',\n    },\n    error: {\n      main: red.A400,\n    },\n    background: {\n      default: '#fff',\n    },\n  },\n});\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/),\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA',\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.',\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log('No internet connection found. App is running in offline mode.');\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport { ThemeProvider } from '@material-ui/core/styles';\n\nimport App from './components/App';\nimport theme from './theme';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <CssBaseline />\n    <ThemeProvider theme={theme}>\n      <App />\n    </ThemeProvider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}